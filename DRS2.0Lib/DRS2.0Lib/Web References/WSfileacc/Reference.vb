'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
'
Namespace WSfileacc
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSFileAccessSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSFileAccess
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SaveScheduleFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveScheduleFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteScheduleFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private pathToDRS20DatabaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private pathToAppDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.My.MySettings.Default.DRS2_0Lib_WSfileacc_WSFileAccess
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SaveScheduleFileCompleted As SaveScheduleFileCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveScheduleFileCompleted As RetrieveScheduleFileCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteScheduleFileCompleted As DeleteScheduleFileCompletedEventHandler
        
        '''<remarks/>
        Public Event pathToDRS20DatabaseCompleted As pathToDRS20DatabaseCompletedEventHandler
        
        '''<remarks/>
        Public Event pathToAppDataCompleted As pathToAppDataCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveScheduleFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SaveScheduleFile(ByVal schedFileContent As String)
            Me.Invoke("SaveScheduleFile", New Object() {schedFileContent})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveScheduleFileAsync(ByVal schedFileContent As String)
            Me.SaveScheduleFileAsync(schedFileContent, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveScheduleFileAsync(ByVal schedFileContent As String, ByVal userState As Object)
            If (Me.SaveScheduleFileOperationCompleted Is Nothing) Then
                Me.SaveScheduleFileOperationCompleted = AddressOf Me.OnSaveScheduleFileOperationCompleted
            End If
            Me.InvokeAsync("SaveScheduleFile", New Object() {schedFileContent}, Me.SaveScheduleFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveScheduleFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveScheduleFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveScheduleFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveScheduleFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveScheduleFile() As String
            Dim results() As Object = Me.Invoke("RetrieveScheduleFile", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveScheduleFileAsync()
            Me.RetrieveScheduleFileAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveScheduleFileAsync(ByVal userState As Object)
            If (Me.RetrieveScheduleFileOperationCompleted Is Nothing) Then
                Me.RetrieveScheduleFileOperationCompleted = AddressOf Me.OnRetrieveScheduleFileOperationCompleted
            End If
            Me.InvokeAsync("RetrieveScheduleFile", New Object(-1) {}, Me.RetrieveScheduleFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveScheduleFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveScheduleFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveScheduleFileCompleted(Me, New RetrieveScheduleFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteScheduleFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteScheduleFile()
            Me.Invoke("DeleteScheduleFile", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteScheduleFileAsync()
            Me.DeleteScheduleFileAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteScheduleFileAsync(ByVal userState As Object)
            If (Me.DeleteScheduleFileOperationCompleted Is Nothing) Then
                Me.DeleteScheduleFileOperationCompleted = AddressOf Me.OnDeleteScheduleFileOperationCompleted
            End If
            Me.InvokeAsync("DeleteScheduleFile", New Object(-1) {}, Me.DeleteScheduleFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteScheduleFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteScheduleFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteScheduleFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/pathToDRS20Database", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function pathToDRS20Database() As String
            Dim results() As Object = Me.Invoke("pathToDRS20Database", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub pathToDRS20DatabaseAsync()
            Me.pathToDRS20DatabaseAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub pathToDRS20DatabaseAsync(ByVal userState As Object)
            If (Me.pathToDRS20DatabaseOperationCompleted Is Nothing) Then
                Me.pathToDRS20DatabaseOperationCompleted = AddressOf Me.OnpathToDRS20DatabaseOperationCompleted
            End If
            Me.InvokeAsync("pathToDRS20Database", New Object(-1) {}, Me.pathToDRS20DatabaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnpathToDRS20DatabaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.pathToDRS20DatabaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent pathToDRS20DatabaseCompleted(Me, New pathToDRS20DatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/pathToAppData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function pathToAppData() As String
            Dim results() As Object = Me.Invoke("pathToAppData", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub pathToAppDataAsync()
            Me.pathToAppDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub pathToAppDataAsync(ByVal userState As Object)
            If (Me.pathToAppDataOperationCompleted Is Nothing) Then
                Me.pathToAppDataOperationCompleted = AddressOf Me.OnpathToAppDataOperationCompleted
            End If
            Me.InvokeAsync("pathToAppData", New Object(-1) {}, Me.pathToAppDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnpathToAppDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.pathToAppDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent pathToAppDataCompleted(Me, New pathToAppDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SaveScheduleFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveScheduleFileCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveScheduleFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveScheduleFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteScheduleFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub pathToDRS20DatabaseCompletedEventHandler(ByVal sender As Object, ByVal e As pathToDRS20DatabaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class pathToDRS20DatabaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub pathToAppDataCompletedEventHandler(ByVal sender As Object, ByVal e As pathToAppDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class pathToAppDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
